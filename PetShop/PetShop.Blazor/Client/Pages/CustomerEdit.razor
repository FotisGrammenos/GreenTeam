@page "/customerlist/edit/{Id:guid?}"
@inject HttpClient httpClient
@inject NavigationManager navigationManager

<PageTitle>Kahoots Pets - Customer</PageTitle>

@if (CustomerItem == null)
{
    <p>Loading ...</p>
}
else
{
    @if (Id == Guid.Empty)
    {
        <h2>Add new customer</h2>
    }
    else
    {
        <h2>Edit @($"{CustomerItem.Surname} {CustomerItem.Name}")</h2>
    }
   <div class="row">
        <div class="col-md-3">
            <label class="form-label">Name</label>
            <input class="form-control" @bind="@CustomerItem.Name" />
        </div>
        <div class="col-md-3">
                <label class="form-label">Surname</label>
                <input class="form-control" @bind="@CustomerItem.Surname" />
        </div>
        <div class="col-md-3">
                <label class="form-label">Phone</label>
                <input class="form-control" @bind="@CustomerItem.Phone" />
        </div> 
        <div class="col-md-3">
                <label class="form-label">TIN</label>
                <input class="form-control" @bind="@CustomerItem.TIN" />
        </div> 
        
    </div> 
    <div class="row mt-2">
        <div class="col">
            <button class="btn btn-success" @onclick="OnSave">Save</button>
            <button class="btn btn-danger" @onclick="OnCancel">Cancel</button>
        </div>
    </div>


}


@code {
    [Parameter] public Guid? Id { get; set ; } 

    CustomerEditViewModel CustomerItem { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Id == null)
        {
            Id = Guid.Empty;
        }
        CustomerItem = await httpClient.GetFromJsonAsync<CustomerEditViewModel>($"customer/{Id}");
    }
    protected async Task OnSave()
    {
        if (string.IsNullOrEmpty(CustomerItem.Name) ||
            string.IsNullOrEmpty(CustomerItem.Surname) ||
            string.IsNullOrEmpty(CustomerItem.Phone) ||
            string.IsNullOrEmpty(CustomerItem.TIN))
            return;
        HttpResponseMessage response;
        if (Id == Guid.Empty)
        {
            response = await httpClient.PostAsJsonAsync("customer", CustomerItem);
        }
        else
        {
            response = await httpClient.PutAsJsonAsync("customer", CustomerItem);
        }
        response.EnsureSuccessStatusCode();
        navigationManager.NavigateTo("customerlist");
    }
    protected void OnCancel()
    {
        navigationManager.NavigateTo("customerlist");
    }
}
