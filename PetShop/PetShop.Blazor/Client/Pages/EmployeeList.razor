@page "/employeeList"
@inject HttpClient httpClient
@inject IJSRuntime jsRuntime
@inject NavigationManager navigationManager
@using Microsoft.AspNetCore.Components;
@using System.Net.Http.Json;
@using PetShop.Blazor.Shared;


<h3>Employees</h3>

<button class="btn btn-primary" @onclick="AddItem" >Add</button>



@if (isLoading)
{
    <p>Loading ...</p>
}
else{
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Name</th>
                <th>Surname</th>
                <th>Salary</th>
                <th>Type</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var employee in employeeList)
            {
                <tr>
                     <td>@employee.Name</td>
                     <td>@employee.Surname</td>
                     <td>@employee.EmployeeType</td>
                     <td>@employee.SallaryPerMonth</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => EditItem(employee)">Edit</button>
                        <button class="btn btn-danger" @onclick="() => DeleteItem(employee)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code{

        List<EmployeeListViewModel> employeeList = new();
        bool isLoading = true;

        protected override async Task OnInitializedAsync()
        {
            await LoadItemsFromServer();
            isLoading = false;
        }

        private async Task LoadItemsFromServer()
        {
            employeeList = await httpClient.GetFromJsonAsync<List<EmployeeListViewModel>>("employee");
        }

        async Task AddItem()
        {
            navigationManager.NavigateTo("/employeeList/edit");
        }

        async Task EditItem(EmployeeListViewModel itemToEdit)
        {
            navigationManager.NavigateTo($"/employeeList/edit/{itemToEdit.Id}");
        }

        async Task DeleteItem(EmployeeListViewModel itemToDelete)
        {
            var confirm = await jsRuntime.InvokeAsync<bool>("confirmDelete", null);
            if (confirm)
            {
                var response = await httpClient.DeleteAsync($"Εmployee/{itemToDelete.Id}");
                response.EnsureSuccessStatusCode();
                await LoadItemsFromServer();
            }
        }
    }